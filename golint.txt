vendor/github.com/dgrijalva/jwt-go/claims.go:99:9: if block ends with a return statement, so drop this else and outdent its block
vendor/github.com/dgrijalva/jwt-go/claims.go:124:9: if block ends with a return statement, so drop this else and outdent its block
vendor/github.com/dgrijalva/jwt-go/ecdsa.go:93:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/ecdsa.go:128:4: should replace keyBytes += 1 with keyBytes++
vendor/github.com/dgrijalva/jwt-go/ecdsa.go:145:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/rsa.go:98:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/rsa_pss.go:123:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/token.go:68:9: should omit 2nd value from range; this loop is equivalent to `for i := range ...`
vendor/github.com/dgrijalva/jwt-go/cmd/jwt/app.go:217:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/cmd/jwt/app.go:226:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/dgrijalva/jwt-go/request/extractor.go:78:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/github.com/fsnotify/fsnotify/inotify_poller.go:129:31: error strings should not be capitalized or end with punctuation or a newline
vendor/github.com/go-siris/siris/cache/client/client.go:26:6: type name will be used as client.ClientHandler by other packages, and that stutters; consider calling this Handler
vendor/github.com/go-siris/siris/cache/uri/uribuilder.go:21:6: type name will be used as uri.URIBuilder by other packages, and that stutters; consider calling this Builder
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:164:10: should omit 2nd value from range; this loop is equivalent to `for s := range ...`
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:169:10: should omit 2nd value from range; this loop is equivalent to `for s := range ...`
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:184:10: should omit 2nd value from range; this loop is equivalent to `for s := range ...`
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:271:3: should replace bestsize += 1 with bestsize++
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:288:3: should replace bestsize += 1 with bestsize++
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:499:4: should replace matches += 1 with matches++
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:523:3: should replace beginning -= 1 with beginning--
vendor/github.com/pmezard/go-difflib/difflib/difflib.go:647:3: should replace beginning -= 1 with beginning--
vendor/github.com/sirupsen/logrus/hooks/syslog/syslog.go:14:6: type name will be used as syslog.SyslogHook by other packages, and that stutters; consider calling this Hook
vendor/github.com/stretchr/testify/assert/errors.go:10:5: error var AnError should have name of the form ErrFoo
vendor/github.com/stretchr/testify/mock/mock.go:563:32: exported func MatchedBy returns unexported type mock.argumentMatcher, which can be annoying to use
vendor/github.com/stretchr/testify/mock/mock_test.go:1263:20: should omit type *TestExampleImplementation from declaration of var mockedService; it will be inferred from the right-hand side
vendor/github.com/stretchr/testify/mock/mock_test.go:1345:9: should omit 2nd value from range; this loop is equivalent to `for i := range ...`
vendor/golang.org/x/crypto/openpgp/packet/public_key.go:31:15: should omit type []byte from declaration of var oidCurveP256; it will be inferred from the right-hand side
vendor/golang.org/x/crypto/openpgp/packet/public_key.go:33:15: should omit type []byte from declaration of var oidCurveP384; it will be inferred from the right-hand side
vendor/golang.org/x/crypto/openpgp/packet/public_key.go:35:15: should omit type []byte from declaration of var oidCurveP521; it will be inferred from the right-hand side
vendor/golang.org/x/crypto/openpgp/packet/signature.go:436:4: should replace length += 1 with length++
vendor/golang.org/x/crypto/otr/otr.go:327:11: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/crypto/otr/otr.go:521:5: error var fragmentError should have name of the form errFoo
vendor/golang.org/x/crypto/ssh/benchmark_test.go:66:31: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/net/html/parse.go:1322:11: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/html/parse.go:1346:11: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/html/parse.go:1644:11: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/html/render.go:58:5: error var plaintextAbort should have name of the form errFoo
vendor/golang.org/x/net/http2/frame.go:1510:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/golang.org/x/net/http2/frame_test.go:1087:12: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/golang.org/x/net/http2/server.go:237:23: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/net/http2/server.go:241:22: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/net/http2/server.go:2576:9: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/http2/server_test.go:2450:11: should omit type *http.Server from declaration of var srv; it will be inferred from the right-hand side
vendor/golang.org/x/net/http2/server_test.go:3071:24: should replace i += 1 with i++
vendor/golang.org/x/net/http2/server_test.go:3093:23: should replace i += 1 with i++
vendor/golang.org/x/net/http2/transport.go:1191:12: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/http2/transport.go:2175:12: should omit type io.ReadCloser from declaration of var noBody; it will be inferred from the right-hand side
vendor/golang.org/x/net/http2/transport_test.go:748:22: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/net/http2/write.go:245:9: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/http2/write.go:294:9: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/net/internal/sockstest/server.go:221:2: should replace req.Addr.Port += 1 with req.Addr.Port++
vendor/golang.org/x/net/internal/timeseries/timeseries.go:313:3: should replace index -= 1 with index--
vendor/golang.org/x/net/trace/histogram.go:67:3: should replace n += 1 with n++
vendor/golang.org/x/net/webdav/internal/xml/xml.go:812:11: if block ends with a return statement, so drop this else and outdent its block
vendor/golang.org/x/sys/unix/sockcmsg_linux.go:14:6: func name will be used as unix.UnixCredentials by other packages, and that stutters; consider calling this Credentials
vendor/golang.org/x/sys/unix/sockcmsg_unix.go:74:6: func name will be used as unix.UnixRights by other packages, and that stutters; consider calling this Rights
vendor/golang.org/x/tools/benchmark/parse/parse.go:41:6: func name will be used as parse.ParseLine by other packages, and that stutters; consider calling this Line
vendor/golang.org/x/tools/benchmark/parse/parse.go:114:6: func name will be used as parse.ParseSet by other packages, and that stutters; consider calling this Set
vendor/golang.org/x/tools/cmd/digraph/digraph.go:291:22: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/tools/cmd/digraph/digraph.go:309:22: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/tools/cmd/getgo/main.go:30:5: error var exitCleanly should have name of the form errFoo
vendor/golang.org/x/tools/cmd/getgo/main.go:30:17: should omit type error from declaration of var exitCleanly; it will be inferred from the right-hand side
vendor/golang.org/x/tools/cmd/godex/godex.go:28:2: error var importFailed should have name of the form errFoo
vendor/golang.org/x/tools/cmd/guru/referrers.go:70:21: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/tools/cmd/tip/tip.go:76:15: should omit type http.Handler from declaration of var httpMux; it will be inferred from the right-hand side
vendor/golang.org/x/tools/go/ssa/lift.go:454:11: should omit type blockSet from declaration of var work; it will be inferred from the right-hand side
vendor/golang.org/x/tools/go/types/typeutil/map.go:308:11: should omit type uint32 from declaration of var hash; it will be inferred from the right-hand side
vendor/golang.org/x/tools/godoc/index.go:1579:2: should replace *c.n += 1 with *c.n++
vendor/golang.org/x/tools/imports/fastwalk.go:26:5: error var traverseLink should have name of the form errFoo
vendor/golang.org/x/tools/imports/fix.go:344:22: should omit type func(importPath, srcDir string) (packageName string) from declaration of var importPathToName; it will be inferred from the right-hand side
vendor/golang.org/x/tools/imports/fix.go:703:17: should omit type func(expectPackage, dir string) map[string]bool from declaration of var loadExports; it will be inferred from the right-hand side
vendor/golang.org/x/tools/imports/fix.go:794:16: should omit type func(pkgName string, symbols map[string]bool, filename string) (foundPkg string, rename bool, err error) from declaration of var findImport; it will be inferred from the right-hand side
vendor/golang.org/x/tools/playground/socket/socket.go:46:13: should omit type func() []string from declaration of var Environ; it will be inferred from the right-hand side
vendor/golang.org/x/tools/present/parse.go:396:29: error strings should not be capitalized or end with punctuation or a newline
vendor/golang.org/x/tools/refactor/rename/rename.go:153:2: error var ConflictError should have name of the form ErrFoo
vendor/gopkg.in/urfave/cli.v2/args.go:6:2: error var argsRangeErr should have name of the form errFoo
vendor/gopkg.in/urfave/cli.v2/altsrc/map_input_source.go:28:11: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/gopkg.in/urfave/cli.v2/altsrc/map_input_source.go:31:12: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
vendor/gopkg.in/urfave/cli.v2/altsrc/toml_file_loader.go:85:14: should omit type tomlMap from declaration of var results; it will be inferred from the right-hand side
vendor/gopkg.in/urfave/cli.v2/altsrc/yaml_file_loader.go:80:27: error strings should not be capitalized or end with punctuation or a newline
vendor/gopkg.in/urfave/cli.v2/altsrc/yaml_file_loader.go:86:27: error strings should not be capitalized or end with punctuation or a newline
vendor/gopkg.in/yaml.v2/emitterc.go:35:3: should replace emitter.buffer_pos += 1 with emitter.buffer_pos++
vendor/gopkg.in/yaml.v2/emitterc.go:38:3: should replace emitter.buffer_pos += 1 with emitter.buffer_pos++
vendor/gopkg.in/yaml.v2/parserc.go:601:10: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/parserc.go:699:10: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/parserc.go:944:11: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/readerc.go:369:5: should replace buffer_len += 1 with buffer_len++
vendor/gopkg.in/yaml.v2/resolve.go:155:12: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/resolve.go:174:13: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/resolve.go:187:13: if block ends with a return statement, so drop this else and outdent its block
vendor/gopkg.in/yaml.v2/scannerc.go:551:3: should replace parser.buffer_pos += 1 with parser.buffer_pos++
vendor/gopkg.in/yaml.v2/yaml.go:350:18: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...)
